name: CI

on: [ push ]

jobs:
  quality-check:
    name: Code Quality Check

    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v2

      - name: Install required packages
        run: |
          pip install -r requirements-dev.txt

      - name: pydocstyle checks (`dlparse`)
        run: |
          pydocstyle dlparse --count

      - name: pylint checks (`dlparse`)
        run: |
          pylint dlparse

  quality-check-win-mac:
    name: Code Quality Check (Win & Mac)

    strategy:
      matrix:
        os: [ macos-latest, windows-latest ]

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v2

      - name: Install required packages
        run: |
          pip install -r requirements-dev.txt

      - name: pydocstyle checks (`dlparse`)
        run: |
          pydocstyle dlparse --count

      - name: pylint checks (`dlparse`)
        run: |
          pylint dlparse

  tests:
    name: Tests

    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Setup Python
        uses: actions/setup-python@v2

      - name: Install required dev packages
        run: |
          pip install -r requirements-dev.txt

      - name: Run tests
        run: |
          pytest --all

  tests-win-mac:
    name: Tests (Win & Mac)

    strategy:
      matrix:
        os: [ macos-latest, windows-latest ]

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Setup Python
        uses: actions/setup-python@v2

      - name: Install required dev packages
        run: |
          pip install -r requirements-dev.txt

      - name: Run tests
        run: |
          pytest --all

  coverage:
    name: Coverage

    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Setup Python
        uses: actions/setup-python@v2

      - name: Install required dev packages
        run: |
          pip install -r requirements-dev.txt

      - name: Generate Coverage database
        run: |
          coverage run -m pytest --all

      - name: Generate Coverage report
        run: |
          coverage xml

      - name: Send Coverage report
        uses: codacy/codacy-coverage-reporter-action@master
        with:
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
          coverage-reports: cobertura.xml

  send-signal:
    name: Send Resource CI/CD signal

    needs: [ quality-check, tests ]

    runs-on: ubuntu-latest

    steps:
      - name: Dispatch request
        uses: peter-evans/repository-dispatch@v1
        with:
          token: ${{ secrets.GH_TOKEN_SITE_RESOURCE }}
          repository: RaenonX-DL/dragalia-site-resources
          event-type: parser-updated
          client-payload: '{"message": "${{ github.repository }}@${{ github.sha }} - ${{ github.run_number }}"}'
